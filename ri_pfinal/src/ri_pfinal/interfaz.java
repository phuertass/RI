/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ri_pfinal;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import org.apache.lucene.analysis.Analyzer;
import org.apache.lucene.analysis.standard.StandardAnalyzer;
import org.apache.lucene.queryparser.classic.QueryParser;

/**
 *
 * @author anne
 */
public class interfaz extends javax.swing.JFrame {
    private Ri_pfinal busqueda;
    /**
     * Creates new form interfaz
     */
    public interfaz() {
        initComponents();
        busqueda = new Ri_pfinal("index", txtConsulta, botonConsulta, opcionesIndice);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtConsulta = new javax.swing.JTextField();
        botonConsulta = new javax.swing.JButton();
        opcionesIndice = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        camposGuiones = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        camposCapitulos = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        opcionesBusqueda = new javax.swing.JList<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        resultadoBusqueda = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtConsulta.setText("Ingrese una consulta...");
        txtConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtConsultaActionPerformed(evt);
            }
        });

        botonConsulta.setText("Buscar");
        botonConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConsultaActionPerformed(evt);
            }
        });

        opcionesIndice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Guiones", "Capítulos" }));

        camposGuiones.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "ID", "Número de episodio", "Tiempo de diálogo", "Personaje", "Localizacion", "Diálogo" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(camposGuiones);

        camposCapitulos.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Camposcapitulosç", "añadir", "chsd", "d", "d", "d", " " };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(camposCapitulos);

        opcionesBusqueda.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Opciones busqueda", "1", "2", "3", " " };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(opcionesBusqueda);

        resultadoBusqueda.setColumns(20);
        resultadoBusqueda.setRows(5);
        jScrollPane4.setViewportView(resultadoBusqueda);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(112, 112, 112)
                        .addComponent(botonConsulta))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(opcionesIndice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(187, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(opcionesIndice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(botonConsulta))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtConsultaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtConsultaActionPerformed

    private void botonConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConsultaActionPerformed
        String consulta= txtConsulta.getText();
        String tipoIndice = (String) opcionesIndice.getSelectedItem();
         Analyzer analyzer = new StandardAnalyzer();
        
        if(consulta.isEmpty()){
            JOptionPane.showMessageDialog(this, "La consulta no puede estar vacía");
            return;
        }
        
        String resultados = "";
       
        String[] campos;
        String campounico;
        
    switch (tipoIndice) {
        case "Guiones":
            
            campos = obtenerCamposGuiones();
            if(campos.length>0){
                busqueda.ConsultaMultiple(analyzer, campos);
                resultados = obtenerResultado();
            }else{
                campounico=campos[0];
                busqueda.ConsultaGenerica(campounico, analyzer);
            }
                
            
            break;
        case "Capítulos":
            campos = obtenerCamposCapitulos();
            if(campos.length>0){
                busqueda.ConsultaMultiple(analyzer, campos);
                resultados = obtenerResultado();
            }else{
                campounico=campos[0];
                busqueda.ConsultaGenerica(campounico, analyzer);
            }
                
            
            break;
        default:
            campos = obtenerCamposOpcionesBusqueda();
            resultados = obtenerResultadosOpcionesBusqueda();
            break;
    }
    
        
        resultadoBusqueda.setText(resultados);
    }//GEN-LAST:event_botonConsultaActionPerformed
private String[] obtenerCamposGuiones() {
    List<String> camposSeleccionados = new ArrayList<>();

    
    int[] indicesSeleccionados = camposGuiones.getSelectedIndices();
    for (int i : indicesSeleccionados) {
        
        String campo = ((DefaultListModel<String>) camposGuiones.getModel()).getElementAt(i);
        camposSeleccionados.add(campo);
    }

    
    return camposSeleccionados.toArray(new String[0]);
}
private String[] obtenerCamposCapitulos() {
    List<String> camposSeleccionados = new ArrayList<>();

    
    int[] indicesSeleccionados = camposCapitulos.getSelectedIndices();
    for (int i : indicesSeleccionados) {
        
        String campo = ((DefaultListModel<String>) camposCapitulos.getModel()).getElementAt(i);
        camposSeleccionados.add(campo);
    }

    
    return camposSeleccionados.toArray(new String[0]);
}
private void opcionesIndiceActionPerformed(java.awt.event.ActionEvent evt){
    String tipoIndice = (String) opcionesIndice.getSelectedItem();
    switch(tipoIndice){
            case "Guiones":
                mostrarCamposGuiones();
                break;
            case "Capítulos":
                mostrarCamposCapitulos();
                break;
            default:
                mostrarOpcionesBusqueda();
                break;
        }
}
private void mostrarCamposGuiones(){
    camposGuiones.setVisible(true);
    camposCapitulos.setVisible(false);
    opcionesBusqueda.setVisible(false);
}
private void mostrarCamposCapitulos(){
    camposGuiones.setVisible(false);
    camposCapitulos.setVisible(true);
    opcionesBusqueda.setVisible(false);
}
private void mostrarOpcionesBusqueda(){
    camposGuiones.setVisible(false);
    camposCapitulos.setVisible(false);
    opcionesBusqueda.setVisible(true);
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new interfaz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonConsulta;
    private javax.swing.JList<String> camposCapitulos;
    private javax.swing.JList<String> camposGuiones;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JList<String> opcionesBusqueda;
    private javax.swing.JComboBox<String> opcionesIndice;
    private javax.swing.JTextArea resultadoBusqueda;
    private javax.swing.JTextField txtConsulta;
    // End of variables declaration//GEN-END:variables
}
